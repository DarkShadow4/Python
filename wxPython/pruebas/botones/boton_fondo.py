#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.1 on Wed Feb 20 08:36:49 2019
#

import random
import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

random.seed()

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        self.button_1 = wx.Button(self, wx.ID_ANY, "button_1")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.change_background, self.button_1)
        self.timer = wx.Timer(self)
        self.Bind(wx.EVT_TIMER, self.update_title)
        self.timer.Start(40)  # in miliseconds

        self.colour_database = wx.ColourDatabase()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.GridSizer(1, 1, 0, 0)
        sizer_1.Add(self.button_1, 0, wx.ALIGN_CENTER, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def update_title(self, event):  # wxGlade: MyFrame.<event_handler>
        pos = wx.GetMousePosition()
        self.SetTitle("x:" + str(pos.x) + "y:" + str(pos.y))

    def change_background(self, event):
        self.colores = [self.colour_database.Find("RED"), self.colour_database.Find("GREEN"), self.colour_database.Find("BLUE"), self.colour_database.Find("YELLOW"), self.colour_database.Find("BLACK"), self.colour_database.Find("WHITE")]
        self.color_random = random.randint(0, len(self.colores)-1)
        self.SetBackgroundColour(self.colores[self.color_random])
        print self.colores[self.color_random]
        self.Refresh()
# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
